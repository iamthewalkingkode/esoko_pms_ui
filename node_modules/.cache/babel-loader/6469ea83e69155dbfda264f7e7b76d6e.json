{"ast":null,"code":"var _jsxFileName = \"/Users/amarachi/www/sirjava/src/pages/list.jsx\";\nimport React, { Component } from 'react';\nimport * as eng from '../providers/engine';\nexport default class List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.data = () => {\n      this.setState({\n        loading: true\n      });\n      eng.postData('sirjava&genesis=sirjava&case=list').then(res => {\n        this.setState({\n          loading: false,\n          data: res.result\n        });\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          loading = _this$state.loading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Ticket\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Personal Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Amount (GHc)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, loading === true ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"15\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"loading data...\")) : '', data.map(val => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, val.code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Full name: \", val.firstname, \" \", val.lastname, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \"Max ID: \", val.maxid, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), \"Phone number: \", val.phone, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \"Email: \", val.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, val.amount), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, val.status === '1' ? React.createElement(\"span\", {\n        class: \"label label-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \" PAID\") : React.createElement(\"span\", {\n        class: \"label label-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), \" UNPAID\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, val.crdate));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/amarachi/www/sirjava/src/pages/list.jsx"],"names":["React","Component","eng","List","constructor","props","data","setState","loading","postData","then","res","result","state","componentDidMount","render","map","val","code","firstname","lastname","maxid","phone","email","amount","status","crdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as eng from '../providers/engine';\n\nexport default class List extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [], loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.data();\n    }\n\n    data = () => {\n        this.setState({ loading: true });\n        eng.postData('sirjava&genesis=sirjava&case=list').then((res) => {\n            this.setState({ loading: false, data: res.result });\n        });\n    }\n\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <p>&nbsp;</p>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Ticket</th>\n                                <th>Personal Details</th>\n                                <th>Amount (GHc)</th>\n                                <th>Status</th>\n                                <th>Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {loading === true ? <tr><td colSpan=\"15\" align=\"center\">loading data...</td></tr> : ''}\n                            {data.map(val => {\n                                return <tr>\n                                    <td>1</td>\n                                    <td>{val.code}</td>\n                                    <td>\n                                    Full name: {val.firstname} {val.lastname} <br/>\n                                    Max ID: {val.maxid} <br/>\n                                    Phone number: {val.phone} <br/>\n                                    Email: {val.email}</td>\n                                    <td>{val.amount}</td>\n                                    <td>\n                                        {val.status === '1' ?\n                                            <span class=\"label label-success\"><i className=\"fa fa-check\"></i> PAID</span> :\n                                            <span class=\"label label-warning\"><i className=\"fa fa-close\"></i> UNPAID</span>\n                                        }\n                                    </td>\n                                    <td>{val.crdate}</td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}