{"ast":null,"code":"var _jsxFileName = \"/Users/amarachi/www/sirjava/src/providers/engine.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nconst api = {\n  apiKey: 'w4JM4g8Rjdh_SIRJAVA_JJht1eRXuDhn',\n  server_of: 'http://anchoratechs.dv/instabolt.api/',\n  server_on: 'https://restapi.sirjavaofficial.com/'\n};\napi.apiURL = api.server_on + '?request=';\nconst app = {\n  version: '1.0.0',\n  dbpref: 'cp_'\n};\nconst date = {\n  td: new Date().toISOString().slice(0, 10) + ' ' + new Date().toLocaleDateString('en-GB', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: 'numeric'\n  }).slice(12, 20),\n  dt: new Date().toISOString().slice(0, 10),\n  yr: new Date().toISOString().slice(0, 4),\n  tm: new Date().toLocaleDateString('en-GB', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: 'numeric'\n  }).slice(12, 20) // Storage\n\n};\n\nconst setStorage = (key, value) => {\n  if (key && value) {\n    localStorage.setItem(app.dbpref + key, value);\n  }\n};\n\nconst getStorage = key => {\n  const value = localStorage.getItem(app.dbpref + key);\n  return value || '';\n};\n\nconst setStorageJson = (key, value) => {\n  if (key && value) {\n    localStorage.setItem(app.dbpref + key, JSON.stringify(value));\n  }\n};\n\nconst getStorageJson = key => {\n  if (key) {\n    const value = localStorage.getItem(app.dbpref + key);\n    return JSON.parse(value) || [];\n  }\n};\n\nconst delStorage = key => {\n  if (key) {\n    localStorage.removeItem(app.dbpref + key);\n  }\n};\n\nconst inArray = (needle, haystack) => {\n  var length = haystack.length;\n\n  for (var i = 0; i < length; i++) {\n    if (haystack[i] === needle) return true;\n  }\n\n  return false;\n};\n\nconst getFileExtension = filename => {\n  var ext = /^.+\\.([^.]+)$/.exec(filename);\n  return ext === null ? '' : ext[1];\n}; // Data Request\n\n\nconst tokey = '&apiKey=' + api.apiKey + '&apiToken=' + getStorage('userToken');\n\nconst serData = obj => {\n  var str = [];\n\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n\n  return str.join('&');\n};\n\nconst jsnData = str => {\n  var obj = {};\n  var data = str.split('&');\n\n  for (var key in data) {\n    obj[data[key].split('=')[0]] = data[key].split('=')[1];\n  }\n\n  return obj;\n};\n\nconst postData = async (action, data = {}) => {\n  try {\n    const response = await fetch(api.apiURL + action, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: serData(data) + tokey\n    });\n    return response.json();\n  } catch (error) {\n    console.error(error);\n  } // return await axios.post(api.apiURL + action, data).then(res => {\n  //     return res.data;\n  // });\n\n};\n\nconst getData = async action => {\n  // try {\n  //     const response = await fetch(api.apiURL + action, {\n  //         method: 'GET',\n  //         headers: { 'Content-Type':'application/json' }\n  //     });\n  //     return response.json();\n  // }\n  // catch (error) {\n  //     console.error(error);\n  // }\n  return await axios.get(api.apiURL + action).then(res => {\n    return res.data;\n  }).catch(e => {\n    return e;\n  });\n}; // Alert Message\n\n\nconst alertMsgSet = (status, msg) => {\n  setStorageJson('alertMsg', {\n    status: status,\n    msg: msg\n  });\n};\n\nconst alertMsg = (statos, msj) => {\n  let alert = getStorageJson('alertMsg');\n  let msg = msj ? msj : alert.msg;\n  let status = statos ? statos : alert.status;\n\n  if (msg && status) {\n    delStorage('alertMsg');\n    delStorage('alertStatus');\n    return React.createElement(\"div\", {\n      className: 'text-center alert alert-' + status,\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, msg);\n  }\n}; // Spinners\n\n\nconst fspinner = () => {\n  //text-align:center;color:#999;line-height:320px;width:100%;\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      color: '#999',\n      lineHeight: 320 + 'px',\n      width: 100 + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-spin fa-circle-o-notch fa-5x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n};\n\nconst fspinner_sm = () => {\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      color: '#999',\n      lineHeight: 120 + 'px',\n      width: 100 + '%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-spin fa-circle-o-notch fa-3x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }));\n};\n\nconst fspinner_xs = () => {\n  return React.createElement(\"i\", {\n    class: \"fa fa-spin fa-circle-o-notch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  });\n};\n\nconst redirect = to => {\n  window.location = to;\n};\n\nexport { api, app, date, setStorage, getStorage, setStorageJson, getStorageJson, delStorage, serData, jsnData, postData, getData, inArray, getFileExtension, alertMsg, alertMsgSet, fspinner, fspinner_sm, fspinner_xs, redirect };","map":{"version":3,"sources":["/Users/amarachi/www/sirjava/src/providers/engine.jsx"],"names":["React","axios","api","apiKey","server_of","server_on","apiURL","app","version","dbpref","date","td","Date","toISOString","slice","toLocaleDateString","hour","minute","second","dt","yr","tm","setStorage","key","value","localStorage","setItem","getStorage","getItem","setStorageJson","JSON","stringify","getStorageJson","parse","delStorage","removeItem","inArray","needle","haystack","length","i","getFileExtension","filename","ext","exec","tokey","serData","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","jsnData","data","split","postData","action","response","fetch","method","headers","body","json","error","console","getData","get","then","res","catch","e","alertMsgSet","status","msg","alertMsg","statos","msj","alert","fspinner","textAlign","color","lineHeight","width","fspinner_sm","fspinner_xs","redirect","to","window","location"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst api = {\n    apiKey: 'w4JM4g8Rjdh_SIRJAVA_JJht1eRXuDhn',\n    server_of: 'http://anchoratechs.dv/instabolt.api/',\n    server_on: 'https://restapi.sirjavaofficial.com/',\n}\napi.apiURL = api.server_on + '?request=';\n\nconst app = {\n    version: '1.0.0',\n    dbpref: 'cp_'\n}\n\nconst date = {\n    td: new Date().toISOString().slice(0, 10) + ' ' + new Date().toLocaleDateString('en-GB', { hour: '2-digit', minute: '2-digit', second: 'numeric' }).slice(12, 20),\n    dt: new Date().toISOString().slice(0, 10),\n    yr: new Date().toISOString().slice(0, 4),\n    tm: new Date().toLocaleDateString('en-GB', { hour: '2-digit', minute: '2-digit', second: 'numeric' }).slice(12, 20)\n}\n\n\n// Storage\nconst setStorage = (key, value) => {\n    if (key && value) {\n        localStorage.setItem(app.dbpref + key, value);\n    }\n}\nconst getStorage = (key) => {\n    const value = localStorage.getItem(app.dbpref + key);\n    return value || '';\n}\nconst setStorageJson = (key, value) => {\n    if (key && value) {\n        localStorage.setItem(app.dbpref + key, JSON.stringify(value));\n    }\n}\nconst getStorageJson = (key) => {\n    if (key) {\n        const value = localStorage.getItem(app.dbpref + key);\n        return JSON.parse(value) || [];\n    }\n}\nconst delStorage = (key) => {\n    if (key) {\n        localStorage.removeItem(app.dbpref + key);\n    }\n}\n\n\n\nconst inArray = (needle, haystack) => {\n    var length = haystack.length;\n    for (var i = 0; i < length; i++) {\n        if (haystack[i] === needle) return true;\n    }\n    return false;\n}\nconst getFileExtension = (filename) => {\n    var ext = /^.+\\.([^.]+)$/.exec(filename);\n    return ext === null ? '' : ext[1];\n}\n\n\n// Data Request\nconst tokey = '&apiKey=' + api.apiKey + '&apiToken=' + getStorage('userToken');\nconst serData = (obj) => {\n    var str = [];\n    for (var p in obj) {\n        if (obj.hasOwnProperty(p)) {\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n        }\n    }\n    return str.join('&');\n}\nconst jsnData = (str) => {\n    var obj = {};\n    var data = str.split('&');\n    for(var key in data){\n        obj[data[key].split('=')[0]] = data[key].split('=')[1];\n    }\n    return obj;\n}\nconst postData = async (action, data = {}) => {\n    try {\n        const response = await fetch(api.apiURL + action, {\n            method: 'POST',\n            headers: { 'Content-Type':'application/x-www-form-urlencoded' },\n            body: serData(data) + tokey\n        });\n        return response.json();\n    }\n    catch (error) {\n        console.error(error);\n    }\n    // return await axios.post(api.apiURL + action, data).then(res => {\n    //     return res.data;\n    // });\n}\nconst getData = async (action) => {\n    // try {\n    //     const response = await fetch(api.apiURL + action, {\n    //         method: 'GET',\n    //         headers: { 'Content-Type':'application/json' }\n    //     });\n    //     return response.json();\n    // }\n    // catch (error) {\n    //     console.error(error);\n    // }\n    return await axios.get(api.apiURL + action).then(res => {\n        return res.data;\n    }).catch(e => {\n        return e;\n    });\n}\n\n\n// Alert Message\nconst alertMsgSet = (status, msg) => {\n    setStorageJson('alertMsg', { status: status, msg: msg });\n}\nconst alertMsg = (statos, msj) => {\n    let alert = getStorageJson('alertMsg');\n    let msg = msj ? msj : alert.msg;\n    let status = statos ? statos : alert.status;\n    if (msg && status) {\n        delStorage('alertMsg');\n        delStorage('alertStatus');\n        return <div className={'text-center alert alert-' + status} role=\"alert\">{msg}</div>;\n    }\n}\n\n// Spinners\nconst fspinner = () => { //text-align:center;color:#999;line-height:320px;width:100%;\n    return <div style={{ textAlign: 'center', color: '#999', lineHeight: 320 + 'px', width: 100 + '%' }}><i className=\"fa fa-spin fa-circle-o-notch fa-5x\"></i></div>;\n}\nconst fspinner_sm = () => {\n    return <div style={{ textAlign: 'center', color: '#999', lineHeight: 120 + 'px', width: 100 + '%' }}><i className=\"fa fa-spin fa-circle-o-notch fa-3x\"></i></div>;\n}\nconst fspinner_xs = () => {\n    return <i class=\"fa fa-spin fa-circle-o-notch\"></i>;\n}\n\nconst redirect = (to) => {\n    window.location = to;\n}\n\n\nexport {\n    api, app, date,\n    setStorage, getStorage, setStorageJson, getStorageJson, delStorage,\n    serData, jsnData, postData, getData,\n    inArray, getFileExtension,\n    alertMsg, alertMsgSet,\n    fspinner, fspinner_sm, fspinner_xs,\n    redirect\n};"]},"metadata":{},"sourceType":"module"}