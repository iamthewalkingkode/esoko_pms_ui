{"ast":null,"code":"var _jsxFileName = \"/Users/amarachi/www/sirjava/src/CampusPunch.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport * as eng from './providers/engine';\nimport Header from './partials/header';\nimport Footer from './partials/footer';\nimport Authenticate from './pages/authenticate/auth';\nimport Academy from './pages/academy/academy';\nexport default class CampusPunch extends Component {\n  constructor(props) {\n    super(props); // this.__testToken();   \n\n    this.params = this.props.match.params;\n    this.authPages = ['signin', 'signup', 'forgot'];\n\n    this.__testToken = () => {\n      const action = this.params.action ? this.params.action : '';\n      eng.postData('accounts&case=token').then(res => {\n        if (eng.inArray(action, this.authPages) === false) {\n          if (res.status === 404 && res.result === 'Invalid $apiToken!!') {\n            this.props.history.push('/logout');\n          } else if (res.status === 200) {\n            eng.setStorageJson('userData', res.result);\n          }\n        }\n      });\n    };\n\n    this.state = {\n      msg: '',\n      status: ''\n    };\n  }\n\n  render() {\n    const action = this.params.action ? this.params.action : '';\n    eng.setStorageJson('route', this.params); // Session vars\n\n    const userData = eng.getStorageJson('userData') || 'userData';\n    const userToken = eng.getStorage('userToken') || 'userToken';\n    const _this$state = this.state,\n          status = _this$state.status,\n          msg = _this$state.msg;\n\n    if (userData && userToken) {\n      const logg = userData;\n\n      if (action === 'logout') {\n        eng.delStorage('userToken');\n        eng.delStorage('userData');\n        eng.alertMsgSet('success', 'You are now logged out');\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      } else {\n        if (eng.inArray(action, this.authPages) === true) {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), eng.alertMsg(status, msg), React.createElement(Route, {\n            exact: true,\n            path: \"/\",\n            component: Academy,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), React.createElement(Route, {\n            exact: true,\n            path: \"/:action\",\n            component: Academy,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }), React.createElement(Footer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }));\n        }\n      }\n    } else {\n      if (eng.inArray(action, this.authPages) === true) {\n        return React.createElement(Authenticate, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      } else {\n        // eng.alertMsgSet('success', 'You are now logged out');\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/amarachi/www/sirjava/src/CampusPunch.jsx"],"names":["React","Component","Route","Redirect","eng","Header","Footer","Authenticate","Academy","CampusPunch","constructor","props","params","match","authPages","__testToken","action","postData","then","res","inArray","status","result","history","push","setStorageJson","state","msg","render","userData","getStorageJson","userToken","getStorage","logg","delStorage","alertMsgSet","alertMsg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport * as eng from './providers/engine';\n\nimport Header from './partials/header';\nimport Footer from './partials/footer';\n\nimport Authenticate from './pages/authenticate/auth';\nimport Academy from './pages/academy/academy';\n\nexport default class CampusPunch extends Component {\n    constructor(props) {\n        super(props);\n        // this.__testToken();   \n        this.state = {\n            msg: '', status: ''\n        };\n    }\n\n    params = this.props.match.params;\n    authPages = ['signin', 'signup', 'forgot'];\n\n    __testToken = () => {\n        const action = this.params.action ? this.params.action : '';\n        eng.postData('accounts&case=token').then((res) => {\n            if (eng.inArray(action, this.authPages) === false) {\n                if (res.status === 404 && res.result === 'Invalid $apiToken!!') {\n                    this.props.history.push('/logout');\n                } else if (res.status === 200) {\n                    eng.setStorageJson('userData', res.result);\n                }\n            }\n        });\n    }\n\n    render() {\n        const action = this.params.action ? this.params.action : '';\n        eng.setStorageJson('route', this.params);\n        // Session vars\n        const userData = eng.getStorageJson('userData') || 'userData';\n        const userToken = eng.getStorage('userToken') || 'userToken';\n\n        const { status, msg } = this.state;\n\n        if (userData && userToken) {\n            const logg = userData;\n            if (action === 'logout') {\n                eng.delStorage('userToken');\n                eng.delStorage('userData');\n                eng.alertMsgSet('success', 'You are now logged out');\n                return <Redirect to='/' />\n            } else {\n                if (eng.inArray(action, this.authPages) === true) {\n                    return <Redirect to='/' />\n                } else {\n                    return (\n                        <React.Fragment>\n                            <Header />\n                            {eng.alertMsg(status, msg)}\n                            <Route exact path=\"/\" component={Academy} />\n                            <Route exact path=\"/:action\" component={Academy} />\n                            <Footer />\n                        </React.Fragment>\n                    );\n                }\n            }\n        } else {\n            if (eng.inArray(action, this.authPages) === true) {\n                return <Authenticate />\n            } else {\n                // eng.alertMsgSet('success', 'You are now logged out');\n                return <Redirect to='/signin' />\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}